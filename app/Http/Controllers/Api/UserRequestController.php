<?php

namespace App\Http\Controllers\Api;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\UserRequest;

class UserRequestController extends Controller
{
    public function store(Request $request)
    {
        $request->validate([
            'type' => 'required',
        ]);

        $data = $request->data;

        $userRequest = UserRequest::create([
            'type' => $request->type,
            'data' => $data
        ]);

        if (!$userRequest->save()) {
            return response()->json([
                'message' => '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö',
            ], 500);
        }

        $messageHeaderData = [
            'üë§ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ —É—Å–ª—É–≥—É',
            'üîç –¢–∏–ø: ' . $request->type,
        ];

        $messageData = [
            isset($data['name']) ? '–ò–º—è: ' . $data['name'] : null,
            isset($data['phone']) ? '–¢–µ–ª–µ—Ñ–æ–Ω: ' . $data['phone'] : null,
            isset($data['agree']) ? '–°–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É: ' . ($data['agree'] == true ? '–î–∞' : '–ù–µ—Ç') : null,
            isset($data['comment']) ? '–°–æ–æ–±—â–µ–Ω–∏–µ: ' . $data['comment'] : null,
            isset($data['message']) ? '–°–æ–æ–±—â–µ–Ω–∏–µ: ' . $data['message'] : null,
            isset($data['service_name']) ? '–£—Å–ª—É–≥–∞: ' . $data['service_name'] : null,
        ];

        $messageData = array_filter($messageData);

        (new \App\Services\Telegram\TelegramMessageService())->sendMessage(
            array_merge($messageHeaderData, $messageData),
            'contact'
        );

        return response()->json([
            'message' => '–ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω',
        ]);
    }

    public function contactForm(Request $request)
    {

        $request->validate([
            'type' => 'required',
            'data' => 'required',
            'data.name' => 'required',
            'data.phone' => 'required',
            'data.email' => 'required',
            'data.message' => 'required',
            'data.subject' => 'required',
        ]);

        $data = $request->data;

        $userRequest = UserRequest::create([
            'type' => $request->type,
            'data' => $data
        ]);


        if (!$userRequest->save()) {
            return response()->json([
                'message' => '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö',
            ], 500);
        }


        $messageHeaderData = [
            'üë§ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å',
            '–°—Ç—Ä–∞–Ω–∏—Ü–∞: –ö–æ–Ω—Ç–∞–∫—Ç—ã',
            'üîç –¢–∏–ø: ' . $request->type . "\n",
        ];

        $messageData = [
            isset($data['name']) ? '–ò–º—è: ' . $data['name'] : null,
            isset($data['phone']) ? '–¢–µ–ª–µ—Ñ–æ–Ω: ' . $data['phone'] : null,
            isset($data['email']) ? 'Email: ' . $data['email'] : null,
            isset($data['message']) ? '–°–æ–æ–±—â–µ–Ω–∏–µ: ' . $data['message'] : null,
            isset($data['subject']) ? '–¢–µ–º–∞: ' . $data['subject'] : null,
        ];

        (new \App\Services\Telegram\TelegramMessageService())->sendMessage(
            array_merge($messageHeaderData, $messageData),
            'order'
        );

        return response()->json([
            'message' => '–ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω',
        ]);
    }
}
