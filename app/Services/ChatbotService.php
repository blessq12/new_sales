<?php

namespace App\Services;

use App\Models\Lead;
use App\Models\Service;
use App\Models\ServiceCategory;
use Illuminate\Support\Facades\Config;
use Illuminate\Support\Facades\Log;

class ChatbotService
{
    protected $flows;
    protected $sessionData;

    public function __construct()
    {
        $this->flows = Config::get('chatbot.flows');
        $this->sessionData = [];
    }

    public function startChat()
    {
        $step = $this->flows['service_selection'];
        $step['data'] = ServiceCategory::select('id', 'name', 'slug')->get();
        return $step;
    }

    public function processStep($stepId, $answer, $sessionId)
    {
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–ª–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ —Å–µ—Å—Å–∏–∏
        $this->sessionData = session()->get("chatbot.{$sessionId}", []);

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —à–∞–≥–∞
        switch ($stepId) {
            case 'service_selection':
                // –î–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                $this->sessionData['category_id'] = $answer;
                break;
            case 'service_details':
                // –î–ª—è –≤—ã–±–æ—Ä–∞ —É—Å–ª—É–≥–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID —É—Å–ª—É–≥–∏
                $this->sessionData['service_id'] = $answer;
                break;
            case 'timing':
                // –î–ª—è –≤—ã–±–æ—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
                $this->sessionData['timing'] = $answer;
                break;
            case 'contact_info':
                // –î–ª—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
                foreach ($answer as $key => $value) {
                    $this->sessionData[$key] = $value;
                }
                break;
        }

        session()->put("chatbot.{$sessionId}", $this->sessionData);

        // –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —à–∞–≥
        $currentStep = $this->flows[$stepId];

        // –ï—Å–ª–∏ —ç—Ç–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–≥ - —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ª–∏–¥
        if ($currentStep['type'] === 'contact_form') {
            return $this->saveLead($answer, $sessionId);
        }

        // –ü–æ–ª—É—á–∞–µ–º —Å–ª–µ–¥—É—é—â–∏–π —à–∞–≥
        $nextStep = $this->flows[$currentStep['next']];

        // –î–æ–±–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ —à–∞–≥–∞
        switch ($nextStep['type']) {
            case 'service_select':
                $categoryId = $this->sessionData['category_id'];
                $nextStep['data'] = Service::where('service_category_id', $categoryId)
                    ->select('id', 'name', 'slug', 'price')
                    ->get();
                break;
            case 'button_select':
                $nextStep['data'] = $nextStep['options'];
                break;
            case 'contact_form':
                $nextStep['data'] = null;
                break;
        }

        return $nextStep;
    }

    protected function saveLead($contactData, $sessionId)
    {
        $sessionData = session()->get("chatbot.{$sessionId}");

        try {
            if (!isset($sessionData['service_id']) || !isset($sessionData['timing'])) {
                throw new \Exception('–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞—è–≤–∫–∏');
            }

            $lead = Lead::create([
                'name' => $sessionData['name'],
                'phone' => $sessionData['phone'],
                'service_id' => $sessionData['service_id'],
                'timing' => $sessionData['timing'],
                'chat_history' => $sessionData
            ]);

            if (class_exists('\App\Services\Telegram\TelegramMessageService')) {
                $service = Service::find($sessionData['service_id']);
                $message = [
                    "üîî –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –∏–∑ —á–∞—Ç-–±–æ—Ç–∞!",
                    "",
                    "üë§ –ò–º—è: {$sessionData['name']}",
                    "üìû –¢–µ–ª–µ—Ñ–æ–Ω: {$sessionData['phone']}",
                    "üîß –£—Å–ª—É–≥–∞: " . ($service ? $service->name : '–ù–µ —É–∫–∞–∑–∞–Ω–∞'),
                    "‚è∞ –í—Ä–µ–º—è: {$sessionData['timing']}",
                ];

                (new \App\Services\Telegram\TelegramMessageService())->sendMessage($message, 'order');
            }

            // –û—á–∏—â–∞–µ–º —Å–µ—Å—Å–∏—é
            session()->forget("chatbot.{$sessionId}");

            // –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π —à–∞–≥
            return $this->flows['finish'];
        } catch (\Exception $e) {
            Log::error('Chatbot lead creation error: ' . $e->getMessage(), [
                'contact_data' => $contactData,
                'session_data' => $sessionData
            ]);

            throw new \Exception('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞—è–≤–∫—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
        }
    }
}
